apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: course-test-pipeline
  labels:
    {{- include "stackclass.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  params:
    - name: REPO_URL
      description: URL of the Git repository to clone
    - name: REPO_REF
      description: Git revision (branch, tag, or commit)
      default: "main"
    - name: COURSE_IMAGE
      description: Full path of the image built by the build task
    - name: TESTER_IMAGE
      description: Full path of the image containing test cases
    - name: TEST_IMAGE
      description: Full path of the merged output image
    - name: COMMAND
      description: Command to run for testing
      default: "echo 'Testing...'"
    - name: TEST_CASES_JSON
      description: Test cases in JSON format
      default: "{}"
    - name: DEBUG_MODE
      description: Enable debug mode
      default: "false"
    - name: TIMEOUT_SECONDS
      description: Timeout duration in seconds
      default: "15"
    - name: SKIP_ANTI_CHEAT
      description: Skip anti-cheat checks
      default: "false"

  workspaces:
    - name: shared-workspace
      description: A workspace to share files between tasks
    - name: docker-config
      description: A workspace for Docker credentials

  tasks:
    - name: checkout
      taskRef:
        name: git-clone
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.REPO_URL)
        - name: revision
          value: $(params.REPO_REF)
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"

    - name: build
      taskRef:
        name: buildah
      runAfter: [checkout]
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: docker-config
      params:
        - name: IMAGE
          value: $(params.COURSE_IMAGE)

    - name: generate
      taskRef:
        name: generate
      runAfter: [build]
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: COURSE_IMAGE
          value: $(params.COURSE_IMAGE)
        - name: TESTER_IMAGE
          value: $(params.TESTER_IMAGE)

    - name: composite
      taskRef:
        name: buildah
      runAfter: [generate]
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: docker-config
      params:
        - name: IMAGE
          value: $(params.TEST_IMAGE)
        - name: DOCKERFILE
          value: ./Dockerfile.composite

    - name: test
      taskRef:
        name: test
      runAfter: [composite]
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: docker-config
          workspace: docker-config
      params:
        - name: IMAGE
          value: $(params.TEST_IMAGE)
        - name: COMMAND
          value: $(params.COMMAND)
        - name: TEST_CASES_JSON
          value: $(params.TEST_CASES_JSON)
        - name: DEBUG_MODE
          value: $(params.DEBUG_MODE)
        - name: TIMEOUT_SECONDS
          value: $(params.TIMEOUT_SECONDS)
        - name: SKIP_ANTI_CHEAT
          value: $(params.SKIP_ANTI_CHEAT)
